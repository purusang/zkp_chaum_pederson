syntax = "proto3";
package  zkp_auth;

/* Prover registers in the server ending (y1, y2) = (alpha ^ x, beta ^ x) */

message RegisterRequest {
    string user = 1;
    bytes y1 = 2;
    bytes y2 = 3;
}

message RegisterResponse {
}

/*
* Prover ask for the challenge in the esrver sending
* r1 = alpha ^ k mod p
* r2 = beta ^ k mod p
* Verifier sends the challenge c 
*/
message AuthenticationChallengeRequest {
    string user = 1;
    bytes r1 = 2;
    bytes r2 = 3;
}
message AuthenticationChallengeResponse {
    bytes auth_id = 1;
    bytes c = 2;
}

/*
* Prover sends solution s = k - cx mod q
* Verifier sends the Session ID if the solution is correct
*/
message AuthenticationAnswerRequest {
    string auth_id = 1;
    bytes s = 2;
}
message AuthenticationAnswerResponse{
    string session_id = 1;
}

service Auth {
    rpc Register(RegisterRequest) returns (RegisterResponse) {}
    rpc CreateAuthenticationChallenge(AuthenticationChallengeRequest) returns (AuthenticationChallengeResponse) {}
    rpc VerifyAuthentication(AuthenticationAnswerRequest) returns (AuthenticationAnswerResponse) {}
}